apply plugin: 'java'
apply plugin: 'groovy'
apply plugin: 'maven-publish'
apply plugin: 'idea'
apply plugin: 'eclipse'

defaultTasks 'build'

repositories {
    mavenCentral()
    mavenLocal()
    mavenRepo name: 'jboss-nexus', url: "https://repository.jboss.org/nexus/content/groups/public/"
    mavenRepo name: "jboss-snapshots", url: "http://snapshots.jboss.org/maven2/"
}

configurations {
    deployerJars {
        description = 'Jars needed for doing deployment to JBoss Nexus repo'
    }
}

dependencies {
    compile gradleApi()
    compile localGroovy()
    compile 'dom4j:dom4j:1.6.1@jar'
	compile 'org.sonatype.plexus:plexus-sec-dispatcher:1.3'
	runtime 'org.codehaus.plexus:plexus-container-default:1.0.0'

    groovy localGroovy()
}

idea {
	project {
		jdkName "1.6"
		languageLevel "1.6"
		ipr {
			withXml { provider ->
				provider.node.component.find { it.@name == 'VcsDirectoryMappings' }.mapping.@vcs = 'Git'
			}
		}
	}
}

ideaModule {
}

manifest.mainAttributes(
    provider: 'gradle',
    'Implementation-Url': 'http://hibernate.org',
    'Implementation-Version': version,
    'Implementation-Vendor': 'Hibernate.org',
    'Implementation-Vendor-Id': 'org.hibernate'
)

task sourceJar(type: Jar, dependsOn: compileJava) {
    from sourceSets.main.allSource
    classifier = 'sources'
}

// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

def gitUrl = "https://github.com/${gitUser}/${gitProject}"

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java

            artifact sourceJar {
                classifier "sources"
            }

            pom.withXml {
                def Node root = asNode();
                root.appendNode('name', 'Gradle Plugin for Maven Publish Authentication')
                root.appendNode('description', 'Gradle plugin for managing authentication against maven based remote repositories')
                root.appendNode('url', gitUrl)

                def org = root.appendNode( 'organization' )
                org.appendNode( 'name', 'Hibernate.org' )
                org.appendNode( 'url', 'http://hibernate.org' )

                def issues = root.appendNode( 'issueManagement' )
                issues.appendNode( 'system', 'github' )
                issues.appendNode( 'url', gitUrl )

                def scm = root.appendNode( 'scm' )
                scm.appendNode( 'url', gitUrl )
                scm.appendNode( 'connection', "scm:git:https://sebersole@github.com/${gitUser}/${gitProject}.git" )
                scm.appendNode( 'developerConnection', "scm:git:git@github.com:${gitUser}/${gitProject}.git" )

                def license = root.appendNode( 'licenses' ).appendNode( 'license' );
                license.appendNode( 'name', 'GNU Lesser General Public License' )
                license.appendNode( 'url', 'http://www.gnu.org/licenses/lgpl-2.1.html' )
                license.appendNode( 'distribution', 'repo' )

                def dev = root.appendNode( 'developers' ).appendNode( 'developer' );
                dev.appendNode( 'id', 'sebersole' )
                dev.appendNode( 'name', 'Steve Ebersole' )
                dev.appendNode( 'organization', 'Hibernate.org' )
                dev.appendNode( 'organizationUrl', 'http://hibernate.org' )
            }
        }
    }

    repositories {
        maven {
            if ( project.version.endsWith( "SNAPSHOT" ) ) {
                url snapshotRepository
            }
            else {
                url releaseRepository
            }
            credentials {
                username = repoUser
                password = repoPassword
            }
        }
    }
}

task wrapper(type: Wrapper) {
	gradleVersion = '1.5'
}
